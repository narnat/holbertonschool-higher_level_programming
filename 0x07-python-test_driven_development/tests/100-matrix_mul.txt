>>> matrix_mul = __import__('100-matrix_mul').matrix_mul


>>> print(matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]]))
[[7, 10], [15, 22]]


>>> print(matrix_mul([[1, 2]], [[3, 4], [5, 6]]))
[[13, 16]]


>>> print(matrix_mul(32, 12))
Traceback (most recent call last):
TypeError: m_a must be a list


>>> print(matrix_mul([1, 32], 12))
Traceback (most recent call last):
TypeError: m_b must be a list


>>> print(matrix_mul([1, 32], [2, 3]))
Traceback (most recent call last):
TypeError: m_a must be a list of lists


>>> print(matrix_mul([[1, 32]], [2, 3]))
Traceback (most recent call last):
TypeError: m_b must be a list of lists


>>> print(matrix_mul([[]], [2, 3]))
Traceback (most recent call last):
TypeError: m_b must be a list of lists


>>> print(matrix_mul([[12, 21]], [[]]))
Traceback (most recent call last):
ValueError: m_b can't be empty


>>> print(matrix_mul([["he", 21]], [[21, 26]]))
Traceback (most recent call last):
TypeError: m_a should contain only integers or floats



>>> print(matrix_mul([[312, 21]], [["Hi", 26]]))
Traceback (most recent call last):
TypeError: m_b should contain only integers or floats


>>> print(matrix_mul([[312, 21], [1, 43, -3]], [[21, 26]]))
Traceback (most recent call last):
TypeError: each row of m_a must should be of the same size


>>> print(matrix_mul([[312, 21, 2], [1, 43, -3]], [[21, 26], [2, 1, 21, 21]]))
Traceback (most recent call last):
TypeError: each row of m_b must should be of the same size


>>> print(matrix_mul([[312, 21, 2], [1, 43, -3]], [[21, 26], [2, 1]]))
Traceback (most recent call last):
ValueError: m_a and m_b can't be multiplied

